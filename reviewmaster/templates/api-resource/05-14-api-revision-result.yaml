AWSTemplateFormatVersion: '2010-09-09'
Description: 'ReviewMaster API Revision Result Module - /revision-result endpoint resources and methods'

# =====================================================================================================================
# PARAMETERS SECTION
# =====================================================================================================================

Parameters:
  # API Gateway References
  RestApiId:
    Type: String
    Description: "REST API ID from API Gateway module"
    
  RestApiRootResourceId:
    Type: String
    Description: "REST API Root Resource ID from API Gateway module"
    
  # Lambda Function Reference
  RevisionCheckerLambdaArn:
    Type: String
    Description: "Revision Checker Lambda Function ARN from Compute module"

# =====================================================================================================================
# RESOURCES SECTION
# =====================================================================================================================

Resources:

  # === RESOURCES ===

  # /revision-result リソース
  RevisionResultResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref RestApiId
      ParentId: !Ref RestApiRootResourceId
      PathPart: "revision-result"

  # /revision-result/{reviewId} リソース
  RevisionResultReviewIdResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref RestApiId
      ParentId: !Ref RevisionResultResource
      PathPart: "{reviewId}"

  # /revision-result/{reviewId}/{revisionNumber} リソース
  RevisionResultRevisionNumberResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref RestApiId
      ParentId: !Ref RevisionResultReviewIdResource
      PathPart: "{revisionNumber}"

  # === METHODS ===

  # /revision-result OPTIONS Method (CORS)
  RevisionResultOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestApiId
      ResourceId: !Ref RevisionResultResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: MOCK
        IntegrationResponses:
          - StatusCode: "200"
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Methods: "'GET,POST,PUT,DELETE,OPTIONS'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            ResponseTemplates:
              application/json: ''
        RequestTemplates:
          application/json: '{"statusCode": 200}'
      MethodResponses:
        - StatusCode: "200"
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true

  # /revision-result/{reviewId} OPTIONS Method (CORS)
  RevisionResultReviewIdOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestApiId
      ResourceId: !Ref RevisionResultReviewIdResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: MOCK
        IntegrationResponses:
          - StatusCode: "200"
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Methods: "'GET,POST,PUT,DELETE,OPTIONS'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            ResponseTemplates:
              application/json: ''
        RequestTemplates:
          application/json: '{"statusCode": 200}'
      MethodResponses:
        - StatusCode: "200"
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true

  # /revision-result/{reviewId}/{revisionNumber} OPTIONS Method (CORS)
  RevisionResultRevisionNumberOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestApiId
      ResourceId: !Ref RevisionResultRevisionNumberResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: MOCK
        IntegrationResponses:
          - StatusCode: "200"
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Methods: "'GET,POST,PUT,DELETE,OPTIONS'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            ResponseTemplates:
              application/json: ''
        RequestTemplates:
          application/json: '{"statusCode": 200}'
      MethodResponses:
        - StatusCode: "200"
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true

  # /revision-result/{reviewId}/{revisionNumber} GET Method
  RevisionResultGetMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestApiId
      ResourceId: !Ref RevisionResultRevisionNumberResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 
          - "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations"
          - LambdaArn: !Ref RevisionCheckerLambdaArn
        RequestTemplates:
          application/json: !Sub |
            {
              "reviewId": "$input.params('reviewId')",
              "revisionNumber": "$input.params('revisionNumber')",
              "httpMethod": "$context.httpMethod",
              "resourcePath": "$context.resourcePath",
              "path": "$context.path",
              "queryStringParameters": {
                #foreach($param in $input.params().querystring.keySet())
                "$param": "$util.escapeJavaScript($input.params().querystring.get($param))" #if($foreach.hasNext),#end
                #end
              },
              "headers": {
                #foreach($header in $input.params().header.keySet())
                "$header": "$util.escapeJavaScript($input.params().header.get($header))" #if($foreach.hasNext),#end
                #end
              },
              "body": "$util.escapeJavaScript($input.body)"
            }
      MethodResponses:
        - StatusCode: "200"
          ResponseModels:
            application/json: "Empty"
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true

  # === LAMBDA PERMISSIONS ===

  RevisionCheckerPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref RevisionCheckerLambdaArn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApiId}/*/*"

# =====================================================================================================================
# OUTPUTS SECTION
# =====================================================================================================================

Outputs:
  RevisionResultResourceId:
    Description: "Revision Result Resource ID"
    Value: !Ref RevisionResultResource
    Export:
      Name: !Sub "${AWS::StackName}-RevisionResultResourceId"
      
  RevisionResultRevisionNumberResourceId:
    Description: "Revision Result Revision Number Resource ID"
    Value: !Ref RevisionResultRevisionNumberResource
    Export:
      Name: !Sub "${AWS::StackName}-RevisionResultRevisionNumberResourceId"
      
  MethodsCount:
    Description: "Number of methods implemented in this module"
    Value: "4" 